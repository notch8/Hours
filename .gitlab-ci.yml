stages:
  - build
  - test
  - review
  - staging
  - production

variables:
  DB_ADAPTER: postgresql  
  POSTGRES_DB: Hours
  POSTGRES_HOST: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_USER: postgres
  SITE_URI_BASE: hours.notch8.com
  TEST_DB: Hours


before_script:
  - touch .env.development
  - touch .env.production
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - echo $TAG

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - sc build
    - sc push
  tags:
    - local

base:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - sc build -s base
    - sc push -s base
  when: manual
  tags:
    - local

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - cd /home/app/webapp && bundle exec rake db:create db:migrate spec
  tags:
    - docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    GIT_STRATEGY: none
    RAILS_ENV: test
    PASSENGER_APP_ENV: test
    DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
  services:
    - docker:dind
    - postgres:latest


#review:
#  stage: review
#  type: deploy
#  environment:
#    name: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
#    url: http://web.$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.staging.$SITE_URI_BASE
#    on_stop: stop_review
#  only:
#    - branches
#  except:
#    - master
#  script:
#    - export RANCHER_ENVIRONMENT=staging
#    - sc provision ci
#
# tags:
#    - docker
#    - mysql

#stop_review:
#  stage: review
#  script:
#    - export RANCHER_ENVIRONMENT=staging
#    - rancher rm $CI_PROJECT_NAME-$CI_BUILD_REF_SLUG
#
#  when: manual
#  environment:
#    name: $CI_PROJECT_NAME-$CI_BUILD_REF_SLUG
#    action: stop

production:
  stage: production
  type: deploy
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG $CI_REGISTRY_IMAGE:production
    - sc release production
    - sc deploy production
  when: manual
  tags:
    - local
